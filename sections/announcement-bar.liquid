{%- if section.blocks.size > 0 -%}
  <div
    class="announcement-bar"
    style="background-color: {{ section.settings.background_color }}"
    data-autoplay="{{ section.settings.autoplay }}"
    data-slide-interval="{{ section.settings.slide_interval | times: 1000 }}"
  >
    <div class="page-width announcement-container">
      <button
        type="button"
        class="announcement-nav announcement-prev"
        aria-label="Previous announcement"
        style="color: {{ section.settings.nav_color }}"
      >
        {% render 'icon-chevron-left' %}
      </button>

      <div class="announcement-slider">
        <div class="announcement-track">
          {% for block in section.blocks %}
            <div
              class="announcement-item{% if forloop.first %} active{% endif %}"
              {{ block.shopify_attributes }}
              data-index="{{ forloop.index0 }}"
            >
              <div class="announcement-content">
                <span class="announcement-text" style="color: {{ section.settings.text_color }}">
                  {{- block.settings.announcement_text -}}
                </span>
                {% if block.settings.cta_text != blank %}
                  <a
                    href="{{ block.settings.cta_link }}"
                    class="announcement-cta"
                    style="color: {{ section.settings.cta_color }}"
                  >
                    {{- block.settings.cta_text -}}
                  </a>
                {% endif %}
              </div>
            </div>
          {% endfor %}
        </div>
      </div>

      <button
        type="button"
        class="announcement-nav announcement-next"
        aria-label="Next announcement"
        style="color: {{ section.settings.nav_color }}"
      >
        {% render 'icon-chevron-right' %}
      </button>
    </div>
  </div>
{%- endif -%}

<style>
  :root {
    --announcement-bar-height: 40px;
  }

  @media screen and (max-width: 767px) {
    :root {
      --announcement-bar-height: 36px;
    }
  }

  .announcement-bar {
    position: relative;
    overflow: hidden;
    padding: 10px 0;
    font-family: var(--font-montserrat);
    font-size: var(--font-size-xs);
    letter-spacing: var(--tracking-widest);
    font-weight: var(--font-light);
    height: var(--announcement-bar-height);
  }

  .announcement-container {
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    max-width: 1400px;
    margin: 0 auto;
    padding: 0 40px;
  }

  .announcement-slider {
    flex: 1;
    position: relative;
    height: 20px;
    max-width: 1000px;
    margin: 0 auto;
  }

  .announcement-track {
    position: relative;
    width: 100%;
    height: 100%;
  }

  .announcement-item {
    position: absolute;
    width: 100%;
    height: 100%;
    left: 0;
    top: 0;
    text-align: center;
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .announcement-item.active {
    opacity: 1;
    pointer-events: auto;
  }

  .announcement-content {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 6px;
    white-space: nowrap;
  }

  .announcement-text {
    display: inline-block;
    text-transform: uppercase;
  }

  .announcement-cta {
    display: inline-block;
    text-decoration: none;
    font-weight: var(--font-medium);
    text-transform: uppercase;
  }

  .announcement-cta:hover {
    opacity: 0.8;
  }

  .announcement-nav {
    background: none;
    border: none;
    padding: 8px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0.5;
    transition: opacity 0.2s ease;
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    z-index: 1;
  }

  .announcement-nav:hover {
    opacity: 0.8;
  }

  .announcement-prev {
    left: 10px;
    margin-right: 0;
  }

  .announcement-next {
    right: 10px;
    margin-left: 0;
  }

  @media screen and (max-width: 767px) {
    .announcement-container {
      padding: 0 24px;
    }

    .announcement-nav {
      padding: 4px;
    }

    .announcement-prev {
      left: 4px;
    }

    .announcement-next {
      right: 4px;
    }
  }
</style>

<script>
  class AnnouncementBar {
    constructor(element) {
      this.container = element;
      this.items = Array.from(this.container.querySelectorAll('.announcement-item'));
      this.prevButton = this.container.querySelector('.announcement-prev');
      this.nextButton = this.container.querySelector('.announcement-next');
      this.currentIndex = 0;
      this.autoplay = this.container.dataset.autoplay === 'true';
      this.interval = parseInt(this.container.dataset.slideInterval) || 5000;
      this.autoplayTimer = null;

      if (this.items.length > 0) {
        this.init();
      }
    }

    init() {
      if (this.items.length <= 1) {
        this.prevButton.style.display = 'none';
        this.nextButton.style.display = 'none';
        return;
      }

      // Show first slide
      this.items[0].classList.add('active');

      // Add click handlers
      this.prevButton.addEventListener('click', () => this.prev());
      this.nextButton.addEventListener('click', () => this.next());

      if (this.autoplay) {
        this.startAutoplay();

        // Pause on hover
        this.container.addEventListener('mouseenter', () => this.stopAutoplay());
        this.container.addEventListener('mouseleave', () => this.startAutoplay());
      }
    }

    goTo(index) {
      // Remove active class from all slides
      this.items.forEach((item) => item.classList.remove('active'));

      // Handle loop
      this.currentIndex = index;
      if (this.currentIndex < 0) this.currentIndex = this.items.length - 1;
      if (this.currentIndex >= this.items.length) this.currentIndex = 0;

      // Add active class to current slide
      this.items[this.currentIndex].classList.add('active');
    }

    next() {
      this.goTo(this.currentIndex + 1);
    }

    prev() {
      this.goTo(this.currentIndex - 1);
    }

    startAutoplay() {
      if (this.autoplayTimer) return;
      this.autoplayTimer = setInterval(() => this.next(), this.interval);
    }

    stopAutoplay() {
      if (!this.autoplayTimer) return;
      clearInterval(this.autoplayTimer);
      this.autoplayTimer = null;
    }
  }

  // Initialize announcement bars
  if (typeof window !== 'undefined') {
    window.addEventListener('DOMContentLoaded', () => {
      document.querySelectorAll('.announcement-bar').forEach((bar) => {
        new AnnouncementBar(bar);
      });
    });
  }
</script>

{% schema %}
{
  "name": "Announcement Bar",
  "settings": [
    {
      "type": "color",
      "id": "background_color",
      "label": "Background Color",
      "default": "#B8A69A"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text Color",
      "default": "#FFFFFF"
    },
    {
      "type": "color",
      "id": "cta_color",
      "label": "CTA Text Color",
      "default": "#FFFFFF"
    },
    {
      "type": "color",
      "id": "nav_color",
      "label": "Navigation Arrows Color",
      "default": "#FFFFFF"
    },
    {
      "type": "header",
      "content": "Slideshow Settings"
    },
    {
      "type": "checkbox",
      "id": "autoplay",
      "label": "Enable Autoplay",
      "default": true
    },
    {
      "type": "range",
      "id": "slide_interval",
      "min": 3,
      "max": 10,
      "step": 1,
      "unit": "s",
      "label": "Change slides every",
      "default": 5
    }
  ],
  "blocks": [
    {
      "type": "announcement",
      "name": "Announcement",
      "settings": [
        {
          "type": "text",
          "id": "announcement_text",
          "label": "Announcement Text",
          "default": "Free Shipping on Orders Over $150"
        },
        {
          "type": "text",
          "id": "cta_text",
          "label": "CTA Text",
          "default": "Shop Now"
        },
        {
          "type": "url",
          "id": "cta_link",
          "label": "CTA Link"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Announcement Bar",
      "blocks": [
        {
          "type": "announcement",
          "settings": {
            "announcement_text": "Free Shipping on Orders Over $150",
            "cta_text": "Shop Now"
          }
        },
        {
          "type": "announcement",
          "settings": {
            "announcement_text": "New Collection: Ethereal Prints Inspired by Nature",
            "cta_text": "Shop Now"
          }
        }
      ]
    }
  ]
}
{% endschema %}
