{{ 'component-slider.css' | asset_url | stylesheet_tag }}

<div class="as-seen-on">
  <div class="as-seen-on__wrapper page-width">
    <h2 class="as-seen-on__heading">{{ section.settings.heading }}</h2>

    <div class="as-seen-on__slider" data-autoplay="{{ section.settings.autoplay }}">
      <div class="as-seen-on__track">
        {%- for block in section.blocks -%}
          <div class="as-seen-on__item" {{ block.shopify_attributes }}>
            <div class="as-seen-on__media">
              {%- if block.settings.image != blank -%}
                {{
                  block.settings.image
                  | image_url: width: 600
                  | image_tag:
                    loading: 'lazy',
                    class: 'as-seen-on__image',
                    widths: '300, 400, 600',
                    sizes: '(min-width: 750px) 20vw, 50vw'
                }}
              {%- else -%}
                {{ 'image' | placeholder_svg_tag: 'as-seen-on__image placeholder' }}
              {%- endif -%}
            </div>
            {%- if block.settings.caption != blank -%}
              <div class="as-seen-on__caption">{{ block.settings.caption }}</div>
            {%- endif -%}
          </div>
        {%- endfor -%}
      </div>
    </div>
  </div>
</div>

<style>
  .as-seen-on {
    margin: 80px 0;
    padding: 60px 0;
    background-color: var(--color-background);
  }

  .as-seen-on__heading {
    margin: 0 0 40px;
    text-align: center;
    font-family: var(--font-montserrat);
    font-size: var(--font-size-xl);
    font-weight: var(--font-light);
    letter-spacing: var(--tracking-widest);
    text-transform: uppercase;
  }

  .as-seen-on__slider {
    position: relative;
    overflow: hidden;
  }

  .as-seen-on__track {
    display: flex;
    gap: 30px;
    flex-wrap: nowrap;
    animation: scroll 30s linear infinite;
  }

  @keyframes scroll {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(-100%);
    }
  }

  .as-seen-on__item {
    flex: 0 0 auto;
    width: 200px;
  }

  .as-seen-on__media {
    position: relative;
    overflow: hidden;
    padding-bottom: 100%;
    border-radius: 4px;
  }

  .as-seen-on__image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .as-seen-on__caption {
    margin-top: 12px;
    text-align: center;
    font-family: var(--font-lato);
    font-size: var(--font-size-sm);
    color: rgba(0, 0, 0, 0.6);
  }

  @media screen and (max-width: 989px) {
    .as-seen-on {
      margin: 40px 0;
      padding: 40px 0;
    }

    .as-seen-on__heading {
      margin-bottom: 30px;
      font-size: var(--font-size-lg);
    }

    .as-seen-on__track {
      gap: 20px;
    }

    .as-seen-on__item {
      width: 150px;
    }
  }
</style>

<script>
  class AsSeenOnSlider {
    constructor(element) {
      this.slider = element;
      this.track = element.querySelector('.as-seen-on__track');
      this.items = element.querySelectorAll('.as-seen-on__item');

      if (this.items.length > 0) {
        this.init();
      }
    }

    init() {
      // Clone items for infinite scroll effect
      const itemsToClone = Array.from(this.items).map((item) => item.cloneNode(true));
      itemsToClone.forEach((item) => this.track.appendChild(item));
    }
  }

  // Initialize sliders
  window.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('.as-seen-on__slider').forEach((slider) => {
      new AsSeenOnSlider(slider);
    });
  });
</script>

{% schema %}
{
  "name": "As Seen On",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "As Seen On"
    },
    {
      "type": "checkbox",
      "id": "autoplay",
      "label": "Enable autoplay",
      "default": true
    }
  ],
  "blocks": [
    {
      "type": "image",
      "name": "Social Image",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "text",
          "id": "caption",
          "label": "Caption"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "As Seen On",
      "blocks": [
        {
          "type": "image"
        },
        {
          "type": "image"
        },
        {
          "type": "image"
        },
        {
          "type": "image"
        },
        {
          "type": "image"
        }
      ]
    }
  ]
}
{% endschema %}
