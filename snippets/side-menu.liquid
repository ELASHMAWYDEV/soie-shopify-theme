{%- comment -%}
  Renders a side menu with dynamic navigation from Shopify.

  Usage:
  {% render 'side-menu', menu: section.settings.menu %}
{%- endcomment -%}

<div class="side-menu" data-side-menu>
  <div class="side-menu-overlay" data-side-menu-overlay></div>
  <div class="side-menu-container">
    <div class="side-menu-header">
      <button type="button" class="side-menu-close" aria-label="Close menu" data-side-menu-close>
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5">
          <path d="M18 6L6 18M6 6l12 12" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div>

    <div class="side-menu-content">
      <nav class="side-menu-nav">
        {%- for link in menu.links -%}
          {%- if link.links != blank -%}
            <div class="menu-section">
              <button class="menu-section-toggle" aria-expanded="false">
                <span>{{ link.title }}</span>
                <svg class="icon-plus" width="16" height="16" viewBox="0 0 16 16" fill="none" stroke="currentColor">
                  <path d="M8 3v10M3 8h10" stroke-width="1.5" stroke-linecap="round"/>
                </svg>
              </button>
              <div class="menu-section-content">
                {%- for childlink in link.links -%}
                  <a
                    href="{{ childlink.url }}"
                    class="menu-sublink"
                    {% if childlink.current %}
                      aria-current="page"
                    {% endif %}
                  >
                    {{ childlink.title }}
                  </a>
                {%- endfor -%}
              </div>
            </div>
          {%- else -%}
            <a
              href="{{ link.url }}"
              class="menu-link"
              {% if link.current %}
                aria-current="page"
              {% endif %}
            >
              {{ link.title }}
            </a>
          {%- endif -%}
        {%- endfor -%}
      </nav>
    </div>

    <div class="side-menu-footer">
      <a href="/account" class="account-link">
        <svg width="20" height="20" viewBox="0 0 20 20" fill="none" stroke="currentColor" stroke-width="1.5">
          <path d="M16.7 18.5H3.3c-.4 0-.8-.3-.8-.7 0-3.6 3.4-6.5 7.5-6.5s7.5 2.9 7.5 6.5c0 .4-.3.7-.8.7zM10 9.8c-2.2 0-4-1.8-4-4s1.8-4 4-4 4 1.8 4 4-1.8 4-4 4z"/>
        </svg>
        <span>Account</span>
      </a>
    </div>
  </div>
</div>

<style>
  @import url('https://fonts.googleapis.com/css2?family=Cinzel:wght@400;500;600&display=swap');

  /* Animation variables from theme settings */
  :root {
    --menu-transition-duration: {{ settings.menu_transition_duration | default: 0.3 }}s;
    --menu-transition-timing: {{ settings.menu_transition_timing | default: 'cubic-bezier(0.4, 0, 0.2, 1)' }};
  }

  /* Add styles for the main content when menu is open */
  body.menu-open main,
  body.menu-open .header-container,
  body.menu-open #shopify-section-announcement-bar {
    filter: blur(4px);
    transition: filter var(--menu-transition-duration) var(--menu-transition-timing);
  }

  /* Overlay for the main content */
  .page-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    opacity: 0;
    visibility: hidden;
    transition: opacity var(--menu-transition-duration) var(--menu-transition-timing),
                visibility var(--menu-transition-duration) var(--menu-transition-timing);
    z-index: 998;
    pointer-events: none;
  }

  body.menu-open .page-overlay {
    opacity: 1;
    visibility: visible;
    pointer-events: auto;
  }

  .side-menu {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1000;
    visibility: hidden;
    transition: visibility var(--menu-transition-duration) linear;
  }

  .side-menu.active {
    visibility: visible;
  }

  .side-menu-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    opacity: 0;
    backdrop-filter: blur(4px);
    -webkit-backdrop-filter: blur(4px);
    transition: opacity var(--menu-transition-duration) var(--menu-transition-timing);
    z-index: 999;
  }

  .side-menu.active .side-menu-overlay {
    opacity: 1;
  }

  .side-menu-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 360px;
    height: 100%;
    background: white;
    transform: translateX(-100%);
    transition: transform var(--menu-transition-duration) var(--menu-transition-timing);
    display: flex;
    flex-direction: column;
    z-index: 1000;
  }

  .side-menu.active .side-menu-container {
    transform: translateX(0);
  }

  .side-menu-header {
    padding: 20px;
    text-align: right;
    border-bottom: 1px solid rgba(0, 0, 0, 0.08);
  }

  .side-menu-close {
    background: none;
    border: none;
    padding: 8px;
    cursor: pointer;
    color: rgba(0, 0, 0, 0.6);
  }

  .side-menu-content {
    flex: 1;
    overflow-y: auto;
    padding: 24px 0;
  }

  .side-menu-nav {
    display: flex;
    flex-direction: column;
  }

  .menu-link {
    position: relative;
    display: block;
    padding: 12px 32px;
    text-decoration: none;
    color: {{ settings.menu_text_color | default: 'black' }};
    font-family: var(--font-cinzel);
    font-size: var(--font-size-xl);
    font-weight: 400;
    line-height: 1.4;
    transition: color var(--menu-transition-duration) ease;
    transform: translateX(-10px);
    opacity: 0;
    transition: transform var(--menu-transition-duration) var(--menu-transition-timing),
                opacity var(--menu-transition-duration) var(--menu-transition-timing);
  }

  .side-menu.active .menu-link {
    transform: translateX(0);
    opacity: 1;
  }

  /* Stagger animation for menu links */
  .side-menu.active .menu-link:nth-child(1) { transition-delay: 0.1s; }
  .side-menu.active .menu-link:nth-child(2) { transition-delay: 0.15s; }
  .side-menu.active .menu-section:nth-child(3) { transition-delay: 0.2s; }
  .side-menu.active .menu-section:nth-child(4) { transition-delay: 0.25s; }
  .side-menu.active .menu-section:nth-child(5) { transition-delay: 0.3s; }
  .side-menu.active .menu-section:nth-child(6) { transition-delay: 0.35s; }
  .side-menu.active .menu-link:nth-last-child(-n+2) { transition-delay: 0.4s; }

  .menu-section {
    border-bottom: 1px solid rgba(0, 0, 0, 0.08);
  }

  .menu-section:last-child {
    border-bottom: none;
  }

  .menu-section-toggle {
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 12px 32px;
    background: none;
    border: none;
    cursor: pointer;
    font-family: var(--font-cinzel);
    font-size: var(--font-size-xl);
    font-weight: 400;
    text-align: left;
    color: {{ settings.menu_text_color | default: 'black' }};
    transform: translateX(-10px);
    opacity: 0;
    transition: transform var(--menu-transition-duration) var(--menu-transition-timing),
                opacity var(--menu-transition-duration) var(--menu-transition-timing);
  }

  .side-menu.active .menu-section-toggle {
    transform: translateX(0);
    opacity: 1;
  }

  .menu-section-toggle .icon-plus {
    transition: transform 0.3s ease;
  }

  .menu-section-toggle[aria-expanded='true'] .icon-plus {
    transform: rotate(45deg);
  }

  .menu-section-content {
    display: none;
    padding: 8px 0 16px;
    background: {{ settings.submenu_background | color_modify: 'alpha', 0.02 }};
    transform: translateY(-10px);
    opacity: 0;
    transition: transform var(--menu-transition-duration) var(--menu-transition-timing),
                opacity var(--menu-transition-duration) var(--menu-transition-timing);
  }

  .menu-section-toggle[aria-expanded='true'] + .menu-section-content {
    display: block;
    transform: translateY(0);
    opacity: 1;
  }

  .menu-sublink {
    display: block;
    padding: 8px 32px 8px 48px;
    text-decoration: none;
    color: {{ settings.submenu_text_color | color_modify: 'alpha', 0.8 }};
    font-family: var(--font-cinzel);
    font-size: var(--font-size-base);
    font-style: italic;
    transition: color var(--menu-transition-duration) ease,
                transform var(--menu-transition-duration) var(--menu-transition-timing);
  }

  .menu-sublink:hover {
    color: {{ settings.submenu_text_color }};
    transform: translateX(4px);
  }

  .side-menu-footer {
    padding: 20px 32px;
    border-top: 1px solid rgba(0, 0, 0, 0.08);
  }

  .account-link {
    display: flex;
    align-items: center;
    gap: 12px;
    text-decoration: none;
    color: black;
    font-family: var(--font-cinzel);
    font-size: var(--font-size-base);
    font-style: italic;
  }

  @media screen and (max-width: 767px) {
    .side-menu-container {
      width: 100%;
    }
  }
</style>

<script>
  class SideMenu {
    constructor() {
      this.menu = document.querySelector('[data-side-menu]');
      this.container = document.querySelector('.side-menu-container');
      this.overlay = document.querySelector('[data-side-menu-overlay]');
      this.closeButton = document.querySelector('[data-side-menu-close]');
      this.toggleButtons = document.querySelectorAll('.mobile-nav-toggle');
      this.sectionToggles = document.querySelectorAll('.menu-section-toggle');

      // Create and append page overlay
      this.pageOverlay = document.createElement('div');
      this.pageOverlay.className = 'page-overlay';
      document.body.appendChild(this.pageOverlay);

      this.init();
    }

    init() {
      this.toggleButtons.forEach((button) => {
        button.addEventListener('click', () => this.open());
      });

      this.closeButton.addEventListener('click', () => this.close());
      this.pageOverlay.addEventListener('click', () => this.close());

      // Handle clicks outside the menu
      document.addEventListener('click', (e) => {
        if (
          this.menu.classList.contains('active') &&
          !this.container.contains(e.target) &&
          !Array.from(this.toggleButtons).some((button) => button.contains(e.target))
        ) {
          this.close();
        }
      });

      this.sectionToggles.forEach((toggle) => {
        toggle.addEventListener('click', () => {
          const isExpanded = toggle.getAttribute('aria-expanded') === 'true';
          toggle.setAttribute('aria-expanded', !isExpanded);
        });
      });
    }

    open() {
      this.menu.classList.add('active');
      document.body.classList.add('menu-open');
      document.body.style.overflow = 'hidden';
    }

    close() {
      this.menu.classList.remove('active');
      document.body.classList.remove('menu-open');
      document.body.style.overflow = '';
    }
  }

  // Initialize side menu
  window.addEventListener('DOMContentLoaded', () => {
    new SideMenu();
  });
</script>
